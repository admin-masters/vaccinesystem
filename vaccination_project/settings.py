"""
Django settings for vaccination_project project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Load environment variables from .env file
load_dotenv(BASE_DIR / '.env')

PATIENT_DATA_FERNET_KEY = os.environ.get("PATIENT_DATA_FERNET_KEY")
if not PATIENT_DATA_FERNET_KEY:
    raise ValueError("PATIENT_DATA_FERNET_KEY environment variable is missing!")

# Ensure bytes
if isinstance(PATIENT_DATA_FERNET_KEY, str):
    PATIENT_DATA_FERNET_KEY = PATIENT_DATA_FERNET_KEY.encode()


# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-7r1gry17%^l63tjrxwl&8&@7ccl#vagkax(-k)y=z-(#e(pv-@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ["127.0.0.1", "localhost", "newvaccine.cpdinclinic.co.in",]  # dev
CSRF_TRUSTED_ORIGINS = [
    "http://newvaccine.cpdinclinic.co.in",
    "https://newvaccine.cpdinclinic.co.in"
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'vaccinations.apps.VaccinationsConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'vaccination_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'vaccination_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'clinic_db',       # your database name
        'USER': 'clinic_user',    # your MySQL username
        'PASSWORD': 'Hfd4U12R^E^&Y*Vy', # your MySQL password
        'HOST': '65.0.103.152',        # or 127.0.0.1
        'PORT': '3306',
    },
    'masters': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('MASTERS_DB_NAME'),
        'USER': os.getenv('MASTERS_DB_USER'),
        'PASSWORD': os.getenv('MASTERS_DB_PASSWORD'),
        'HOST': os.getenv('MASTERS_DB_HOST'),
        'PORT': '3306',
    },
    'patients': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('PATIENTS_DB_NAME'),
        'USER': os.getenv('PATIENTS_DB_USER'),
        'PASSWORD': os.getenv('PATIENTS_DB_PASSWORD'),
        'HOST': os.getenv('PATIENTS_DB_HOST'),
        'PORT': '3306',
    },
}

DATABASE_ROUTERS = ['vaccinations.routers.MasterPatientRouter']
# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = "Asia/Kolkata"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# MEDIA (for doctor photo upload)

# Session configuration
SESSION_ENGINE = 'django.contrib.sessions.backends.db'
SESSION_COOKIE_AGE = 1209600  # 2 weeks
SESSION_COOKIE_SECURE = False  # dev only
SESSION_COOKIE_HTTPONLY = True
SESSION_COOKIE_SAMESITE = 'Lax'   # default is already Lax, make it explicit
SESSION_SAVE_EVERY_REQUEST = True

# Keep cookies sent on the top-level Google redirect back to your app.
SESSION_COOKIE_SAMESITE = "Lax"   # default is already Lax, make it explicit
SESSION_COOKIE_SECURE = False     # dev only
LOGIN_URL = "/auth/google/start/"

# ---- Google OAuth (read secrets from .env file only) ----
GOOGLE_CLIENT_ID = os.getenv("GOOGLE_CLIENT_ID")
GOOGLE_CLIENT_SECRET = os.getenv("GOOGLE_CLIENT_SECRET")

# Validate required OAuth environment variables
if not GOOGLE_CLIENT_ID:
    raise ValueError("GOOGLE_CLIENT_ID environment variable is missing from .env file!")
if not GOOGLE_CLIENT_SECRET:
    raise ValueError("GOOGLE_CLIENT_SECRET environment variable is missing from .env file!")

GOOGLE_OAUTH = {
    "CLIENT_ID": GOOGLE_CLIENT_ID,
    "CLIENT_SECRET": GOOGLE_CLIENT_SECRET,
    # must exactly match one of the Redirect URIs registered in Google:
    "REDIRECT_PATH": "/auth/google/callback/",
    "SCOPES": ["openid", "email", "profile"],
}

MEDIA_ROOT = BASE_DIR / "media"
AUTO_SEND_TO_PARENT_ON_ADD = True
# at bottom
MEDIA_URL  = "/media/"
MEDIA_ROOT = BASE_DIR / "media"
PHONE_HASH_SALT = os.environ.get("PHONE_HASH_SALT", "")
